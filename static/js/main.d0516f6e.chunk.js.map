{"version":3,"sources":["components/layout/Header.js","components/events/Event.js","actions/eventActions.js","actions/types.js","components/events/Events.js","components/layout/TextInputGroup.js","components/events/Addevent.js","components/pages/About.js","components/pages/NotFound.js","reducers/eventReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","title","className","style","color","fontSize","textAlign","alignContent","href","to","defaultProps","Event","state","showEventInfo","onShowClick","setState","onDeleteClick","id","deleteEvents","this","event","name","website","onClick","type","bind","float","Component","connect","dispatch","a","axios","delete","payload","Events","getEvents","events","Fragment","map","key","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","Addevent","errors","onSubmit","e","preventDefault","newEvent","addEvents","history","push","target","post","About","NotFound","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d0516f6e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { title } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-success mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a\r\n          style={{\r\n            color: \"Yellow\",\r\n            fontSize: \"35px\",\r\n            textAlign: \"center\",\r\n            alignContent: \"center\",\r\n          }}\r\n          href=\"/#\"\r\n          className=\"navbar-brand\"\r\n        >\r\n          {title}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"navbar-item\">\r\n              <Link\r\n                to=\"/\"\r\n                className=\"nav-link\"\r\n                style={{ color: \"aqua\", fontSize: \"25px\" }}\r\n              >\r\n                <i className=\"fas fa-eye\"></i> View\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link\r\n                to=\"/event/add\"\r\n                className=\"nav-link\"\r\n                style={{ color: \"aqua\", fontSize: \"25px\" }}\r\n                href=\"/#\"\r\n              >\r\n                <i className=\"fas fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar-item\">\r\n              <Link\r\n                to=\"/about\"\r\n                className=\"nav-link\"\r\n                style={{ color: \"aqua\", fontSize: \"25px\" }}\r\n                href=\"/#\"\r\n              >\r\n                <i className=\"fas fa-question\"></i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  title: \"FindMyEvents\",\r\n};\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteEvents } from \"../../actions/eventActions\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showEventInfo: false,\r\n  };\r\n\r\n  onShowClick = () => {\r\n    this.setState({\r\n      showEventInfo: !this.state.showEventInfo,\r\n    });\r\n  };\r\n\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteEvents(id);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, website } = this.props.event;\r\n    const { showEventInfo } = this.state;\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <h3>\r\n          Event name : {name}\r\n          <i onClick={this.onShowClick} className=\"fas fa-angle-down\" />\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.onDeleteClick.bind(this, id)}\r\n            style={{ float: \"right\", fontSize: \"15px\" }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </h3>\r\n        {showEventInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Website : {website}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nEvent.propTypes = {\r\n  event: PropTypes.object.isRequired,\r\n  deleteEvents: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteEvents })(Event);\r\n","import { GET_EVENTS } from \"./types\";\r\nimport { ADD_EVENTS } from \"./types\";\r\nimport { DELETE_EVENTS } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getEvents = () => async (dispatch) => {\r\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n  dispatch({\r\n    type: GET_EVENTS,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const deleteEvents = (id) => async (dispatch) => {\r\n  await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n  dispatch({\r\n    type: DELETE_EVENTS,\r\n    payload: id,\r\n  });\r\n};\r\nexport const addEvents = (event) => async (dispatch) => {\r\n  const res = await axios.post(\r\n    \"https://jsonplaceholder.typicode.com/users\",\r\n    event\r\n  );\r\n  dispatch({\r\n    type: ADD_EVENTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n","export const GET_EVENTS = \"GET_EVENTS\";\r\nexport const DELETE_EVENTS = \"DELETE_EVENTS\";\r\nexport const ADD_EVENTS = \"ADD_EVENTS\";\r\n","import React, { Component } from \"react\";\r\nimport Event from \"./Event\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getEvents } from \"../../actions/eventActions\";\r\n\r\nclass Events extends Component {\r\n  componentDidMount() {\r\n    this.props.getEvents();\r\n  }\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"display-4 mb-2\">\r\n          <span style={{ color: \"blue\" }}>Events</span> List\r\n        </h1>\r\n        {events.map((event) => (\r\n          <Event key={event.id} event={event} />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nEvents.propTypes = {\r\n  events: PropTypes.array.isRequired,\r\n  getEvents: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  events: state.event.events,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getEvents })(Events);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addEvents } from \"../../actions/eventActions\";\r\n\r\nclass Addevent extends Component {\r\n  state = {\r\n    name: \"\",\r\n    website: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, website } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (website === \"\") {\r\n      this.setState({ errors: { website: \"Website is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const newEvent = {\r\n      name,\r\n      website,\r\n    };\r\n    this.props.addEvents(newEvent);\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      website: \"\",\r\n\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  render() {\r\n    const { name, website, errors } = this.state;\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">AddEvent</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Website\"\r\n              name=\"website\"\r\n              placeholder=\"Enter Website\"\r\n              value={website}\r\n              onChange={this.onChange}\r\n              error={errors.website}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add Event\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddevent.propTypes = {\r\n  addEvents: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { addEvents })(Addevent);\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Events List</h1>\r\n      <p className=\"lead\">Simple app to know your Events</p>\r\n      <p className=\"lead-secondary\">Happy day!</p>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Please find a correct URL</h1>\r\n      <p>Sorry this page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\nexport default NotFound;\r\n","import { GET_EVENTS } from \"../actions/types\";\r\nimport { DELETE_EVENTS } from \"../actions/types\";\r\nimport { ADD_EVENTS } from \"../actions/types\";\r\nconst initialState = {\r\n  events: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: action.payload,\r\n      };\r\n    case DELETE_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((event) => event.id !== action.payload),\r\n      };\r\n    case ADD_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: [action.payload, ...state.events],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport eventReducer from \"./eventReducer\";\r\n\r\nexport default combineReducers({\r\n  event: eventReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport Events from \"./components/events/Events\";\nimport Addevent from \"./components/events/Addevent\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header title=\"Find My Events\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Events} />\n                <Route exact path=\"/event/add\" component={Addevent} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}